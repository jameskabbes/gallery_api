name: gh-pages documentation builder

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract project information
        id: project_info
        run: |
          pip install toml
          python -c "
          import toml
          import os

          with open('pyproject.toml', 'r') as f:
              data = toml.load(f)
              
          # Get project section
          project = data.get('project', {})

          # Extract information
          project_name = project.get('name', 'unknown')
          project_version = project.get('version', '0.0.0')
          python_version = project.get('requires-python', '>=3.13').replace('>', '').replace('=', '').strip()

          # Output to GitHub Actions
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f'project_name={project_name}\n')
              f.write(f'project_version={project_version}\n')
              f.write(f'python_version={python_version}\n')

          # Print for logging
          print(f'Project: {project_name}')
          print(f'Version: {project_version}')
          print(f'Python: {python_version}')
          "

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.project_info.outputs.python_version }}

      - name: Install pip and packages
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install sphinx sphinx-rtd-theme
          uv pip install -e .

      - name: Generate documentation
        run: |
          # generate the documentation, put it in the docs folder
          rm -rf docs
          mkdir docs
          cd sphinx
          sphinx-apidoc -o . ../src/arbor_imago/
          make html 
          mkdir /tmp/docs/
          mv _build/html/* /tmp/docs/
          cd ../..

      - name: Deploy to gh-pages
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # check if gh-pages branch exists, if not create it
          git fetch origin gh-pages || {
            git checkout --orphan gh-pages
            git rm -rf .
            git commit --allow-empty -m "Initialize gh-pages branch"
            git push origin gh-pages
            git checkout main
          }

          # remove all files from the git tracking, then checkout
          git clean -fdx

          # checkout
          git checkout gh-pages

          #remove all untracked files
          git rm -rf .

          # move the docs folder back to the root of the repository
          cp -r /tmp/docs/* .
          touch .nojekyll

          git add .

          if git status --porcelain | grep .; then
            git commit -m "Update documentation for ${{ steps.project_info.outputs.project_name }} version ${{ steps.project_info.outputs.project_version }}"
            git push origin gh-pages
          else
            echo "No changes to commit"
          fi
